"""Para resolver este desaf칤o, debes escribir un algoritmo que elimine los elementos repetidos para obtener un conjunto 칰nico llamado new_set.

Este algoritmo recibir치 como entrada cuatro conjuntos de pa칤ses, estos pa칤ses ser치n de todo el continente americano divididos de la siguiente manera:

countries - Pa칤ses del continente en general.
northAmerica - Pa칤ses del norte de Am칠rica.
centralAmerica - Pa칤ses del centro de Am칠rica.
southAmerica - Pa칤ses del sur de Am칠rica.
En resumen, el algoritmo deber치 eliminar los elementos repetidos de los cuatro conjuntos de pa칤ses y obtener un conjunto 칰nico llamado new_set.


countries = {"MX", "COL", "ARG", "USA"}
northAm = {"USA", "CANADA"}
centralAm = {"MX", "GT", "BZ"}
southAm = {"COL", "BZ", "ARG"}


# Escribe tu soluci칩n 游녢
new_set = set(countries | northAm | centralAm | southAm)
print(new_set)
"""


"""
Para resolver este desaf칤o, tu reto es refactorizar el c칩digo base utilizando la caracter칤stica de "List Comprehension" de Python.

El c칩digo base incluye una lista llamada numbers que contiene n칰meros pares e impares. El algoritmo actual selecciona los n칰meros pares de esta lista y los agrega a una nueva lista llamada even_numbers.

Tu reto es crear la misma lista utilizando la caracter칤stica de "List Comprehension" de Python para crear la lista de n칰meros pares de manera m치s concisa y eficiente y el resultado deber칤a quedar en la variable even_numbers_v2. Las dos t칠cnicas deber칤an de dar el mismo resultado.

numbers = [35, 16, 10, 34, 37, 25]

even_numbers = []
for number in numbers:
  if number % 2 == 0:
    even_numbers.append(number)
print('v1 =>', even_numbers)

# Ahora usando List Comprehension 游녢
even_numbers_v2 = [number for number in numbers if number % 2 ==0]

print('v2 =>', even_numbers_v2)
"""


"""Para resolver este desaf칤o, tu reto completar la funci칩n message_creator para que retorne un mensaje distinto dependiendo del art칤culo de tecnolog칤a que reciba como entrada.

La funci칩n message_creator recibir치 como entrada un string que indica el art칤culo de tecnolog칤a. Luego, deber치s evaluar el valor de este string y retornar un mensaje distinto dependiendo del valor que reciba.

La implementacion debe responder al siguiente comportamiento:

Si recibes una computadora, debes retornar el mensaje: "Con mi computadora puedo programar usando Python".
Si recibes un celular, debes retornar el mensaje: "En mi celular puedo aprender usando la app de Platzi".
Si recibes un cable, debes retornar el mensaje: "춰Hay un cable en mi bota!".
Y si no recibes ninguno de estos valores, debes retornar el mensaje: "Art칤culo no encontrado".
"""
def message_creator(text):
   # Escribe tu soluci칩n 游녢
   #text = input("Ingrese articulo: \n")
   #text = text.lower()
   respuestas = {'computadora' : "Con mi computadora puedo programar usando Python", 
                    'celular' : "En mi celular puedo aprender usando la app de Platzi",
                    'cable' : "춰Hay un cable en mi bota!"}
   if not text in respuestas.keys():
      return "Art칤culo no encontrado"
   else:
      return respuestas[text]



text = 'computadora'
response = message_creator(text)
print(response)


"""
Para resolver este desaf칤o, tu reto es utilizar la funci칩n map de Python y una funci칩n lambda para transformar una lista de n칰meros. Debes retornar una lista en la que cada n칰mero de la lista original sea multiplicado por dos.

La funci칩n multiply_numbers recibir치 como entrada una lista con n칰meros. Finalmente, la funci칩n retornar치 la lista transformada.
"""
def multiply_numbers(numbers):
    # Escribe tu soluci칩n 游녢
    #result = list(map(lambda multiply_numbers: multiply_numbers*2,numbers))
    #return result
    return list(map(lambda multiply_numbers: multiply_numbers*2,numbers))

numbers = [1, 2, 3, 4]
response = multiply_numbers(numbers)
print(response)

"""
Para resolver este desaf칤o, tu reto es usar la funci칩n filter de Python y una funci칩n lambda para filtrar una lista de palabras, retornando una lista solo con las que cumplan con la condici칩n de tener 4 o m치s letras.

La funci칩n filter_by_length recibir치 como entrada una lista con palabras. Finalmente, la funci칩n retornar치 la lista filtrada.
"""
def filter_by_length(words):
   # Escribe tu soluci칩n 游녢

   return list(filter(lambda filtered_word: len(filtered_word) >= 4, words))

words = ['amor', 'sol', 'piedra', 'd칤a']
response = filter_by_length(words)
print(response)